import Header from '@/components/Header';
import MainNavigation from '@/components/MainNavigation';
import Footer from '@/components/Footer';
import Layout from '@/components/Layout';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { MapPin, Clock, Camera, Mountain, Filter, Search, Calendar, Users, Star, Share2 } from 'lucide-react';
import { useState, useEffect } from 'react';
import LazyImage from '@/components/LazyImage';
import AttractionImageSlider from '@/components/AttractionImageSlider';
import dragonSpineImage from '@/assets/dragon-spine.jpg';
import SearchAutocomplete from '@/components/SearchAutocomplete';
import RatingSystem from '@/components/RatingSystem';
import SocialShare from '@/components/SocialShare';
import { seoOptimizer } from '@/utils/seoOptimizer';
import { ATTRACTIONS_DATA } from '@/data/attractionsData';
import InteractiveMap from '@/components/InteractiveMap';
import ItineraryPlanner from '@/components/ItineraryPlanner';

const Attractions = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [difficultyFilter, setDifficultyFilter] = useState('all');
  const [durationFilter, setDurationFilter] = useState('all');

  // SEO optimization for attractions page
  useEffect(() => {
    seoOptimizer.updateMetaTags({
      title: 'ƒêi·ªÉm Tham Quan T√† X√πa - Kh√°m Ph√° C√°c ƒê·ªãa ƒêi·ªÉm H·∫•p D·∫´n',
      description: 'Kh√°m ph√° c√°c ƒëi·ªÉm tham quan n·ªïi ti·∫øng t·∫°i T√† X√πa: S·ªëng L∆∞ng Kh·ªßng Long, ƒê·ªânh Phu Sang, C√¢y C√¥ ƒê∆°n, ƒê·ªìi Ch√® Shan Tuy·∫øt. H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ th·ªùi gian, ƒë·ªô kh√≥ v√† c√°ch di chuy·ªÉn.',
      keywords: 'ƒëi·ªÉm tham quan T√† X√πa, s·ªëng l∆∞ng kh·ªßng long, ƒë·ªânh Phu Sang, c√¢y c√¥ ƒë∆°n, ƒë·ªìi ch√® Shan Tuy·∫øt, du l·ªãch T√¢y B·∫Øc',
      image: dragonSpineImage,
      type: 'article',
      locale: 'vi_VN'
    });

    // Add structured data for attractions
    const structuredData = {
      "@context": "https://schema.org",
      "@type": "ItemList",
      "name": "ƒêi·ªÉm Tham Quan T√† X√πa",
      "description": "Danh s√°ch c√°c ƒëi·ªÉm tham quan h·∫•p d·∫´n t·∫°i T√† X√πa",
      "numberOfItems": 6,
      "itemListElement": [
        {
          "@type": "TouristAttraction",
          "name": "S·ªëng L∆∞ng Kh·ªßng Long",
          "description": "D√£y n√∫i h√πng vƒ© v·ªõi h√¨nh d√°ng gi·ªëng nh∆∞ s·ªëng l∆∞ng kh·ªßng long kh·ªïng l·ªì",
          "image": dragonSpineImage,
          "geo": {
            "@type": "GeoCoordinates",
            "latitude": 21.3099,
            "longitude": 104.4569
          }
        }
      ]
    };

    seoOptimizer.addStructuredData(structuredData);

    // Add breadcrumb
    seoOptimizer.addBreadcrumbStructuredData([
      { name: 'Trang ch·ªß', url: window.location.origin },
      { name: 'ƒêi·ªÉm tham quan', url: window.location.href }
    ]);
  }, []);

  const attractions = ATTRACTIONS_DATA;

  const filteredAttractions = attractions.filter(attraction => {
    const matchesSearch = attraction.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         attraction.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         attraction.category.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesDifficulty = difficultyFilter === 'all' || attraction.difficulty === difficultyFilter;
    
    const matchesDuration = durationFilter === 'all' || 
                           (durationFilter === 'short' && attraction.duration.includes('1-2')) ||
                           (durationFilter === 'medium' && (attraction.duration.includes('2-3') || attraction.duration.includes('3-4'))) ||
                           (durationFilter === 'long' && (attraction.duration.includes('4-5') || attraction.duration.includes('5-6')));
    
    return matchesSearch && matchesDifficulty && matchesDuration;
  });

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'D·ªÖ':
        return 'bg-green-100 text-green-800 border-green-200';
      case 'Trung b√¨nh':
        return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'Kh√≥':
        return 'bg-red-100 text-red-800 border-red-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  return (
    <Layout>
      <MainNavigation />
      <Header />
      
      <main className="pt-16">
        {/* Hero Section */}
        <section 
          className="relative h-96 md:h-[600px] bg-cover bg-center bg-no-repeat flex items-center justify-center"
          style={{
            backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6)), url('/Locations/HEro Section.png')`,
            backgroundSize: 'cover',
            backgroundPosition: 'center',
            minHeight: '400px'
          }}
        >
          <div className="relative text-center text-white z-10 px-4">
            <h1 className="font-playfair text-4xl md:text-6xl font-bold mb-4 drop-shadow-2xl">
              üåü ƒêi·ªÉm Tham Quan T√† X√πa üåü
            </h1>
            <p className="font-inter text-xl md:text-2xl max-w-3xl mx-auto drop-shadow-lg">
              Kh√°m ph√° nh·ªØng ƒë·ªãa ƒëi·ªÉm tuy·ªát ƒë·∫πp v√† ƒë·ªôc ƒë√°o c·ªßa T√† X√πa
            </p>
          </div>
        </section>

        {/* Main Content */}
        <section className="py-16 container mx-auto px-4">
          <Tabs defaultValue="attractions" className="w-full">
            <TabsList className="grid w-full grid-cols-4 mb-8">
              <TabsTrigger value="attractions" className="flex items-center gap-2">
                <Mountain className="w-4 h-4" />
                ƒê·ªãa ƒêi·ªÉm
              </TabsTrigger>
              <TabsTrigger value="map" className="flex items-center gap-2">
                <MapPin className="w-4 h-4" />
                B·∫£n ƒê·ªì
              </TabsTrigger>
              <TabsTrigger value="reviews" className="flex items-center gap-2">
                <Star className="w-4 h-4" />
                ƒê√°nh Gi√°
              </TabsTrigger>
              <TabsTrigger value="itineraries" className="flex items-center gap-2">
                <Calendar className="w-4 h-4" />
                L·ªãch Tr√¨nh
              </TabsTrigger>
            </TabsList>

            {/* Attractions Tab */}
            <TabsContent value="attractions" className="space-y-8">
              {/* Filters */}
              <div className="bg-muted/30 p-6 rounded-lg">
                <div className="flex flex-col md:flex-row gap-4 items-center">
                  <div className="flex-1">
                    <SearchAutocomplete
                      placeholder="T√¨m ki·∫øm ƒë·ªãa ƒëi·ªÉm..."
                      onSearch={setSearchTerm}
                      showFilters={true}
                      filters={[
                        {
                          id: 'category',
                          label: 'Danh m·ª•c',
                          value: '',
                          onChange: () => {},
                          options: [
                            { value: 'nui-da', label: 'N√∫i ƒë√°' },
                            { value: 'dinh-nui', label: 'ƒê·ªânh n√∫i' },
                            { value: 'canh-quan', label: 'C·∫£nh quan' },
                            { value: 'nong-nghiep', label: 'N√¥ng nghi·ªáp' },
                            { value: 'thac-nuoc', label: 'Th√°c n∆∞·ªõc' }
                          ]
                        },
                        {
                          id: 'difficulty',
                          label: 'ƒê·ªô kh√≥',
                          value: '',
                          onChange: () => {},
                          options: [
                            { value: 'de', label: 'D·ªÖ' },
                            { value: 'trung-binh', label: 'Trung b√¨nh' },
                            { value: 'kho', label: 'Kh√≥' }
                          ]
                        }
                      ]}
                    />
                  </div>
                  <div className="flex gap-4">
                    <Select value={difficultyFilter} onValueChange={setDifficultyFilter}>
                      <SelectTrigger className="w-40">
                        <SelectValue placeholder="ƒê·ªô kh√≥" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="all">T·∫•t c·∫£ ƒë·ªô kh√≥</SelectItem>
                        <SelectItem value="D·ªÖ">D·ªÖ</SelectItem>
                        <SelectItem value="Trung b√¨nh">Trung b√¨nh</SelectItem>
                        <SelectItem value="Kh√≥">Kh√≥</SelectItem>
                      </SelectContent>
                    </Select>
                    <Select value={durationFilter} onValueChange={setDurationFilter}>
                      <SelectTrigger className="w-40">
                        <SelectValue placeholder="Th·ªùi gian" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="all">T·∫•t c·∫£ th·ªùi gian</SelectItem>
                        <SelectItem value="short">Ng·∫Øn (1-2h)</SelectItem>
                        <SelectItem value="medium">Trung b√¨nh (2-4h)</SelectItem>
                        <SelectItem value="long">D√†i (5h+)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </div>

              {/* Attractions Grid */}
              <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
                {filteredAttractions.map((attraction) => (
                  <Card key={attraction.id} className="group overflow-hidden shadow-soft hover:shadow-medium transition-all duration-300 hover:-translate-y-2">
                    <div className="relative h-64 overflow-hidden">
                      <AttractionImageSlider
                        images={attraction.images}
                        attractionName={attraction.name}
                        autoPlay={true}
                        autoPlayInterval={4000}
                        className="h-64"
                      />
                      <div className="absolute top-4 left-4 flex gap-2 z-10">
                        <Badge className={getDifficultyColor(attraction.difficulty)}>
                          {attraction.difficulty}
                        </Badge>
                        <Badge variant="secondary">{attraction.category}</Badge>
                      </div>
                    </div>

                    <CardHeader>
                      <CardTitle className="font-playfair text-xl text-foreground flex items-center">
                        <Mountain className="w-5 h-5 mr-2 text-primary" />
                        {attraction.name}
                      </CardTitle>
                    </CardHeader>

                    <CardContent className="space-y-4">
                      <p className="font-inter text-muted-foreground leading-relaxed">
                        {attraction.description}
                      </p>

                      {/* Info Grid */}
                      <div className="grid grid-cols-2 gap-4 py-4 border-t border-b border-border">
                        <div className="flex items-center space-x-2">
                          <Clock className="w-4 h-4 text-primary" />
                          <div>
                            <div className="font-inter text-xs text-muted-foreground">Th·ªùi gian</div>
                            <div className="font-inter text-sm font-semibold">{attraction.duration}</div>
                          </div>
                        </div>
                        <div className="flex items-center space-x-2">
                          <MapPin className="w-4 h-4 text-primary" />
                          <div>
                            <div className="font-inter text-xs text-muted-foreground">Th·ªùi ƒëi·ªÉm t·ªët nh·∫•t</div>
                            <div className="font-inter text-sm font-semibold">{attraction.bestTime}</div>
                          </div>
                        </div>
                      </div>

                      {/* Highlights */}
                      <div className="space-y-2">
                        <h4 className="font-inter font-semibold text-foreground">ƒêi·ªÉm n·ªïi b·∫≠t:</h4>
                        <div className="space-y-1">
                          {attraction.highlights.map((highlight, index) => (
                            <div key={index} className="flex items-center space-x-2">
                              <div className="w-1.5 h-1.5 bg-primary rounded-full" />
                              <span className="font-inter text-sm text-muted-foreground">{highlight}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      <div className="flex gap-2">
                        <Button className="flex-1 bg-primary text-primary-foreground hover:bg-primary/90 btn-primary focus-ring">
                          Xem Chi Ti·∫øt
                        </Button>
                        <Button
                          variant="outline"
                          size="sm"
                          className="px-3"
                          onClick={(e) => {
                            e.stopPropagation();
                            // Handle share action
                          }}
                        >
                          <Share2 className="w-4 h-4" />
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            {/* Map Tab */}
            <TabsContent value="map" className="space-y-8">
              <InteractiveMap />
            </TabsContent>

            {/* Reviews Tab */}
            <TabsContent value="reviews" className="space-y-8">
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <div className="lg:col-span-2">
                  <RatingSystem
                    locationId="ta-xua-general"
                    locationName="T√† X√πa"
                    averageRating={4.7}
                    totalReviews={156}
                    reviews={[
                      {
                        id: '1',
                        userName: 'Minh Anh',
                        rating: 5,
                        comment: 'T√† X√πa th·ª±c s·ª± l√† m·ªôt thi√™n ƒë∆∞·ªùng! C·∫£nh quan h√πng vƒ©, kh√¥ng kh√≠ trong l√†nh. ƒê·∫∑c bi·ªát l√† kho·∫£nh kh·∫Øc sƒÉn m√¢y l√∫c b√¨nh minh, th·∫≠t kh√¥ng th·ªÉ n√†o qu√™n ƒë∆∞·ª£c.',
                        date: '2024-01-15',
                        location: 'H√† N·ªôi',
                        helpful: 12,
                        verified: true
                      },
                      {
                        id: '2',
                        userName: 'Thanh H∆∞∆°ng',
                        rating: 4,
                        comment: 'ƒê·ªãa ƒëi·ªÉm r·∫•t ƒë·∫πp nh∆∞ng ƒë∆∞·ªùng ƒëi kh√° kh√≥ khƒÉn. N√™n chu·∫©n b·ªã k·ªπ l∆∞·ª°ng v√† ƒëi theo nh√≥m. C·∫£nh quan x·ª©ng ƒë√°ng v·ªõi c√¥ng s·ª©c b·ªè ra.',
                        date: '2024-01-10',
                        location: 'TP.HCM',
                        helpful: 8,
                        verified: false
                      },
                      {
                        id: '3',
                        userName: 'ƒê·ª©c Minh',
                        rating: 5,
                        comment: 'L·∫ßn ƒë·∫ßu ti√™n ƒë·∫øn T√† X√πa v√† ƒë√£ b·ªã m√™ ho·∫∑c ho√†n to√†n. S·ªëng l∆∞ng kh·ªßng long th·∫≠t s·ª± ·∫•n t∆∞·ª£ng. S·∫Ω quay l·∫°i v√†o m√πa kh√°c ƒë·ªÉ tr·∫£i nghi·ªám.',
                        date: '2024-01-05',
                        location: 'ƒê√† N·∫µng',
                        helpful: 15,
                        verified: true
                      }
                    ]}
                    onSubmitReview={(review) => {

                      // Handle review submission
                    }}
                  />
                </div>
                <div className="space-y-6">
                  <SocialShare
                    title="Kh√°m ph√° T√† X√πa - Thi√™n ƒë∆∞·ªùng sƒÉn m√¢y"
                    description="Tr·∫£i nghi·ªám nh·ªØng ƒëi·ªÉm ƒë·∫øn tuy·ªát v·ªùi t·∫°i T√† X√πa c√πng Sky Quest"
                    showTitle={true}
                  />
                  
                  <Card>
                    <CardHeader>
                      <CardTitle>Th·ªëng k√™ ƒë√°nh gi√°</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div className="flex justify-between items-center">
                        <span>C·∫£nh quan</span>
                        <div className="flex items-center gap-2">
                          <div className="w-20 bg-gray-200 rounded-full h-2">
                            <div className="bg-green-500 h-2 rounded-full" style={{ width: '95%' }}></div>
                          </div>
                          <span className="text-sm">4.8</span>
                        </div>
                      </div>
                      <div className="flex justify-between items-center">
                        <span>D·ªãch v·ª•</span>
                        <div className="flex items-center gap-2">
                          <div className="w-20 bg-gray-200 rounded-full h-2">
                            <div className="bg-blue-500 h-2 rounded-full" style={{ width: '85%' }}></div>
                          </div>
                          <span className="text-sm">4.3</span>
                        </div>
                      </div>
                      <div className="flex justify-between items-center">
                        <span>Ti·ªán √≠ch</span>
                        <div className="flex items-center gap-2">
                          <div className="w-20 bg-gray-200 rounded-full h-2">
                            <div className="bg-yellow-500 h-2 rounded-full" style={{ width: '75%' }}></div>
                          </div>
                          <span className="text-sm">3.8</span>
                        </div>
                      </div>
                      <div className="flex justify-between items-center">
                        <span>Gi√° tr·ªã</span>
                        <div className="flex items-center gap-2">
                          <div className="w-20 bg-gray-200 rounded-full h-2">
                            <div className="bg-purple-500 h-2 rounded-full" style={{ width: '90%' }}></div>
                          </div>
                          <span className="text-sm">4.5</span>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </div>
            </TabsContent>

            {/* Itineraries Tab */}
            <TabsContent value="itineraries" className="space-y-8">
              <ItineraryPlanner />
            </TabsContent>
          </Tabs>
        </section>

        {/* Planning Tips */}
        <section className="py-16 bg-muted/30">
          <div className="container mx-auto px-4">
            <div className="max-w-4xl mx-auto">
              <h2 className="font-playfair text-3xl md:text-4xl font-bold text-foreground mb-8 text-center">
                L∆∞u √ù Khi Kh√°m Ph√°
              </h2>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                <Card className="p-6">
                  <h3 className="font-playfair text-xl font-bold text-foreground mb-4">Chu·∫©n B·ªã</h3>
                  <ul className="space-y-2 font-inter text-muted-foreground">
                    <li>‚Ä¢ Gi√†y trekking ch·ªëng tr∆∞·ª£t</li>
                    <li>‚Ä¢ √Åo ·∫•m (nhi·ªát ƒë·ªô c√≥ th·ªÉ xu·ªëng d∆∞·ªõi 10¬∞C)</li>
                    <li>‚Ä¢ ƒê√®n pin v√† pin d·ª± ph√≤ng</li>
                    <li>‚Ä¢ N∆∞·ªõc u·ªëng v√† th·ª©c ƒÉn nh·∫π</li>
                    <li>‚Ä¢ Thu·ªëc men c√° nh√¢n</li>
                  </ul>
                </Card>
                <Card className="p-6">
                  <h3 className="font-playfair text-xl font-bold text-foreground mb-4">An To√†n</h3>
                  <ul className="space-y-2 font-inter text-muted-foreground">
                    <li>‚Ä¢ Di chuy·ªÉn theo nh√≥m, kh√¥ng ƒëi m·ªôt m√¨nh</li>
                    <li>‚Ä¢ Th√¥ng b√°o l·ªãch tr√¨nh cho ng∆∞·ªùi th√¢n</li>
                    <li>‚Ä¢ Ki·ªÉm tra th·ªùi ti·∫øt tr∆∞·ªõc khi kh·ªüi h√†nh</li>
                    <li>‚Ä¢ Thu√™ h∆∞·ªõng d·∫´n vi√™n ƒë·ªãa ph∆∞∆°ng</li>
                    <li>‚Ä¢ Mang theo m√°y GPS ho·∫∑c b·∫£n ƒë·ªì</li>
                  </ul>
                </Card>
              </div>
            </div>
          </div>
        </section>
      </main>

      <Footer />
    </Layout>
  );
};

export default Attractions;