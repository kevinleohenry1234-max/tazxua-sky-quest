#!/bin/bash

# Script t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh homestay/hotel
# ƒê·∫£m b·∫£o t·∫•t c·∫£ h√¨nh ·∫£nh c√≥ k√≠ch th∆∞·ªõc d∆∞·ªõi 500KB

HOTELS_DIR="/Users/phuoctrinhgia/Desktop/2. PROJECT VIVIET/Ta Xua Mua Xanh/public/Hotels"
MAX_SIZE_KB=500
BACKUP_DIR="${HOTELS_DIR}_backup_$(date +%Y%m%d_%H%M%S)"

echo "üîß B·∫Øt ƒë·∫ßu t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh homestay/hotel..."
echo "üìÅ Th∆∞ m·ª•c: $HOTELS_DIR"
echo "üìè K√≠ch th∆∞·ªõc t·ªëi ƒëa: ${MAX_SIZE_KB}KB"

# Ki·ªÉm tra ImageMagick
if ! command -v magick &> /dev/null && ! command -v convert &> /dev/null; then
    echo "‚ùå ImageMagick kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t. Vui l√≤ng c√†i ƒë·∫∑t:"
    echo "   brew install imagemagick"
    exit 1
fi

# T·∫°o backup
echo "üíæ T·∫°o backup t·∫°i: $BACKUP_DIR"
cp -r "$HOTELS_DIR" "$BACKUP_DIR"

# H√†m t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh
optimize_image() {
    local file="$1"
    local size_kb=$(du -k "$file" | cut -f1)
    
    if [ $size_kb -gt $MAX_SIZE_KB ]; then
        echo "üîÑ T·ªëi ∆∞u: $(basename "$file") (${size_kb}KB -> "
        
        # Th·ª≠ gi·∫£m ch·∫•t l∆∞·ª£ng t·ª´ 85% xu·ªëng 60%
        for quality in 85 75 65 60; do
            temp_file="${file}.temp"
            
            if command -v magick &> /dev/null; then
                magick "$file" -quality $quality -strip "$temp_file"
            else
                convert "$file" -quality $quality -strip "$temp_file"
            fi
            
            new_size_kb=$(du -k "$temp_file" | cut -f1)
            
            if [ $new_size_kb -le $MAX_SIZE_KB ]; then
                mv "$temp_file" "$file"
                echo "${new_size_kb}KB) ‚úÖ"
                return 0
            fi
        done
        
        # N·∫øu v·∫´n qu√° l·ªõn, th·ª≠ resize
        for scale in 90 80 70; do
            temp_file="${file}.temp"
            
            if command -v magick &> /dev/null; then
                magick "$file" -resize ${scale}% -quality 70 -strip "$temp_file"
            else
                convert "$file" -resize ${scale}% -quality 70 -strip "$temp_file"
            fi
            
            new_size_kb=$(du -k "$temp_file" | cut -f1)
            
            if [ $new_size_kb -le $MAX_SIZE_KB ]; then
                mv "$temp_file" "$file"
                echo "${new_size_kb}KB) ‚úÖ"
                return 0
            fi
        done
        
        # Cleanup temp file n·∫øu kh√¥ng th√†nh c√¥ng
        rm -f "$temp_file"
        echo "‚ùå Kh√¥ng th·ªÉ t·ªëi ∆∞u xu·ªëng d∆∞·ªõi ${MAX_SIZE_KB}KB"
    else
        echo "‚úÖ OK: $(basename "$file") (${size_kb}KB)"
    fi
}

# ƒê·∫øm t·ªïng s·ªë file
total_files=0
optimized_files=0
total_size_before=0
total_size_after=0

echo ""
echo "üìä Qu√©t v√† t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh..."

# Duy·ªát qua t·∫•t c·∫£ file .png trong th∆∞ m·ª•c Hotels
while IFS= read -r -d '' file; do
    if [[ -f "$file" ]]; then
        size_before=$(du -k "$file" | cut -f1)
        total_size_before=$((total_size_before + size_before))
        
        optimize_image "$file"
        
        size_after=$(du -k "$file" | cut -f1)
        total_size_after=$((total_size_after + size_after))
        
        if [ $size_before -gt $size_after ]; then
            optimized_files=$((optimized_files + 1))
        fi
        
        total_files=$((total_files + 1))
    fi
done < <(find "$HOTELS_DIR" -name "*.png" -print0)

echo ""
echo "üìà B√°o c√°o t·ªëi ∆∞u h√≥a:"
echo "   üìÅ T·ªïng s·ªë file: $total_files"
echo "   üîß File ƒë∆∞·ª£c t·ªëi ∆∞u: $optimized_files"
echo "   üìè K√≠ch th∆∞·ªõc tr∆∞·ªõc: ${total_size_before}KB"
echo "   üìè K√≠ch th∆∞·ªõc sau: ${total_size_after}KB"

if [ $total_size_before -gt 0 ]; then
    saved_kb=$((total_size_before - total_size_after))
    saved_percent=$((saved_kb * 100 / total_size_before))
    echo "   üíæ Ti·∫øt ki·ªám: ${saved_kb}KB (${saved_percent}%)"
fi

echo ""
echo "‚úÖ Ho√†n th√†nh t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh!"
echo "üíæ Backup ƒë∆∞·ª£c l∆∞u t·∫°i: $BACKUP_DIR"

# Ki·ªÉm tra file l·ªõn h∆°n 500KB c√≤n l·∫°i
echo ""
echo "üîç Ki·ªÉm tra file c√≤n l·∫°i l·ªõn h∆°n ${MAX_SIZE_KB}KB:"
large_files=0
while IFS= read -r -d '' file; do
    size_kb=$(du -k "$file" | cut -f1)
    if [ $size_kb -gt $MAX_SIZE_KB ]; then
        echo "   ‚ö†Ô∏è  $(basename "$file"): ${size_kb}KB"
        large_files=$((large_files + 1))
    fi
done < <(find "$HOTELS_DIR" -name "*.png" -print0)

if [ $large_files -eq 0 ]; then
    echo "   ‚úÖ T·∫•t c·∫£ file ƒë·ªÅu d∆∞·ªõi ${MAX_SIZE_KB}KB"
else
    echo "   ‚ö†Ô∏è  C√≤n $large_files file l·ªõn h∆°n ${MAX_SIZE_KB}KB"
fi